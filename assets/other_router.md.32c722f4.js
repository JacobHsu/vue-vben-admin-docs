import{o as n,c as s,a}from"./app.1e087f38.js";const t='{"title":"router","description":"","frontmatter":{},"headers":[{"level":2,"title":"login","slug":"login"},{"level":2,"title":"routes","slug":"routes"}],"relativePath":"other/router.md","lastUpdated":1630314544007}',p={},o=a('<h1 id="router"><a class="header-anchor" href="#router" aria-hidden="true">#</a> router</h1><p><code>asyncRoutes</code> router\\routes\\modules 定義頁面 router<br> store\\modules\\permission.ts 調用router<br> router\\guard\\index.ts setupRouterGuard呼叫store<br> main.ts setupRouterGuard(router); 裝載</p><p>main.ts</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> router<span class="token punctuation">,</span> setupRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/router&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// Configure routing</span>\n  <span class="token comment">// vue-vite-admin/#/dashboard</span>\n  <span class="token function">setupRouter</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// basicRoutes (layouts\\default\\feature &amp; PAGE_NOT_FOUND_ROUTE)</span>\n\n  <span class="token comment">// router-guard</span>\n  <span class="token comment">// vue-vite-admin/#/login?redirect=/dashboard by createPermissionGuard</span>\n  <span class="token function">setupRouterGuard</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// asyncRoutes (router\\routes\\modules)</span>\n</code></pre></div><h2 id="login"><a class="header-anchor" href="#login" aria-hidden="true">#</a> login</h2><p>router\\routes\\index.ts</p><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> LoginRoute<span class="token operator">:</span> AppRouteRecordRaw <span class="token operator">=</span> <span class="token punctuation">{</span>\n  path<span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>\n  name<span class="token operator">:</span> <span class="token string">&#39;Login&#39;</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;/@/views/sys/login/Login.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;routes.basic.login&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><p>router\\guard\\index.ts</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createPermissionGuard <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./permissionGuard&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">setupRouterGuard</span><span class="token punctuation">(</span><span class="token parameter">router<span class="token operator">:</span> Router</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   <span class="token function">createPermissionGuard</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>router\\guard\\permissionGuard.ts</p><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createPermissionGuard</span><span class="token punctuation">(</span><span class="token parameter">router<span class="token operator">:</span> Router</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n     <span class="token comment">// redirect login page</span>\n      <span class="token keyword">const</span> redirectData<span class="token operator">:</span> <span class="token punctuation">{</span> path<span class="token operator">:</span> string<span class="token punctuation">;</span> replace<span class="token operator">:</span> boolean<span class="token punctuation">;</span> query<span class="token operator">?</span><span class="token operator">:</span> Recordable<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n        path<span class="token operator">:</span> <span class="token constant">LOGIN_PATH</span><span class="token punctuation">,</span> <span class="token comment">// &#39;/login&#39;</span>\n        replace<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="routes"><a class="header-anchor" href="#routes" aria-hidden="true">#</a> routes</h2><p>router\\index.ts</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> basicRoutes <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./routes&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  history<span class="token operator">:</span> <span class="token function">createWebHashHistory</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VITE_PUBLIC_PATH</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  routes<span class="token operator">:</span> basicRoutes <span class="token keyword">as</span> unknown <span class="token keyword">as</span> RouteRecordRaw<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n</code></pre></div><p>router\\routes\\index.ts</p><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> RootRoute<span class="token operator">:</span> AppRouteRecordRaw <span class="token operator">=</span> <span class="token punctuation">{</span>\n  path<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>\n  name<span class="token operator">:</span> <span class="token string">&#39;Root&#39;</span><span class="token punctuation">,</span>\n  redirect<span class="token operator">:</span> PageEnum<span class="token punctuation">.</span><span class="token constant">BASE_HOME</span><span class="token punctuation">,</span> <span class="token comment">// redirect  &#39;/dashboard&#39;</span>\n  meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;Root&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Basic routing without permission</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> basicRoutes <span class="token operator">=</span> <span class="token punctuation">[</span>RootRoute<span class="token punctuation">,</span> <span class="token operator">...</span>mainOutRoutes<span class="token punctuation">,</span> <span class="token operator">...</span>asyncRoutes<span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre></div><p>將 router\\routes\\modules 下的文件檔案都進 RouteModule</p><div class="language-js"><pre><code><span class="token comment">// Vite 支持使用特殊的 import.<wbr>meta.glob 函数从文件系统导入多个模块</span>\n<span class="token keyword">const</span> modules <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">globEager</span><span class="token punctuation">(</span><span class="token string">&#39;./modules/**/*.ts&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> routeModuleList<span class="token operator">:</span> AppRouteModule<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nObject<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>modules<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> mod <span class="token operator">=</span> modules<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>default <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> modList <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>mod<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token operator">...</span>mod<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">[</span>mod<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  routeModuleList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>modList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 由 src\\store\\modules\\permission.ts 呼叫</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> asyncRoutes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>routeModuleList<span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre></div><p><code>router\\routes\\modules\\</code>dashboard.ts</p><div class="language-js"><pre><code><span class="token keyword">import</span> HelloWorld <span class="token keyword">from</span> <span class="token string">&#39;/@/components/HelloWorld.vue&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> dashboard<span class="token operator">:</span> AppRouteModule <span class="token operator">=</span> <span class="token punctuation">{</span>\n  path<span class="token operator">:</span> <span class="token string">&#39;/dashboard&#39;</span><span class="token punctuation">,</span>\n  name<span class="token operator">:</span> <span class="token string">&#39;Dashboard&#39;</span><span class="token punctuation">,</span>\n  component<span class="token operator">:</span> HelloWorld<span class="token punctuation">,</span>\n  meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n    icon<span class="token operator">:</span> <span class="token string">&#39;ion:grid-outline&#39;</span><span class="token punctuation">,</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;routes.dashboard.dashboard&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> dashboard<span class="token punctuation">;</span>\n</code></pre></div><p>src\\router\\guard\\permissionGuard.ts</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> usePermissionStoreWithOut <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/store/modules/permission&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> permissionStore <span class="token operator">=</span> <span class="token function">usePermissionStoreWithOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token keyword">await</span> permissionStore<span class="token punctuation">.</span><span class="token function">buildRoutesAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>router\\guard\\index.ts</p><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">setupRouterGuard</span><span class="token punctuation">(</span><span class="token parameter">router<span class="token operator">:</span> Router</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">createPermissionGuard</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Call Store permission.ts Call routes asyncRoutes</span>\n</code></pre></div>',24);p.render=function(a,t,p,e,c,u){return n(),s("div",null,[o])};export default p;export{t as __pageData};
