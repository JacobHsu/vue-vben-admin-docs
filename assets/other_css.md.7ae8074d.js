import{o as n,c as s,a}from"./app.2ee97bb8.js";const t='{"title":"css","description":"","frontmatter":{},"headers":[{"level":2,"title":"config","slug":"config"},{"level":2,"title":"load","slug":"load"},{"level":2,"title":"usage","slug":"usage"},{"level":2,"title":"debug","slug":"debug"}],"relativePath":"other/css.md","lastUpdated":1628231862382}',p={},e=a('<h1 id="css"><a class="header-anchor" href="#css" aria-hidden="true">#</a> css</h1><p>config: vite.config.ts -&gt; build/generate/generateModifyVars -&gt; src/design/color.less<br> load: main.ts -&gt; design/index.less -&gt; src\\design\\public.less<br> usage: vite.config.ts -&gt; build\\vite\\plugin\\index.ts -&gt; build\\vite\\plugin\\theme.ts</p><h2 id="config"><a class="header-anchor" href="#config" aria-hidden="true">#</a> config</h2><p>vite.config.ts</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> generateModifyVars <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./build/generate/generateModifyVars&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createVitePlugins <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./build/vite/plugin&#39;</span><span class="token punctuation">;</span>\n\n <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    css<span class="token operator">:</span> <span class="token punctuation">{</span>\n      preprocessorOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n        less<span class="token operator">:</span> <span class="token punctuation">{</span>\n          modifyVars<span class="token operator">:</span> <span class="token function">generateModifyVars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          javascriptEnabled<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n    <span class="token comment">// The vite plugin used by the project. The quantity is large, so it is separately extracted and managed</span>\n    plugins<span class="token operator">:</span> <span class="token function">createVitePlugins</span><span class="token punctuation">(</span>viteEnv<span class="token punctuation">,</span> isBuild<span class="token punctuation">)</span><span class="token punctuation">,</span>\n <span class="token punctuation">}</span>\n</code></pre></div><p>build/generate/generateModifyVars</p><div class="language-js"><pre><code><span class="token keyword">return</span> <span class="token punctuation">{</span>\n    hack<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>modifyVars<span class="token punctuation">.</span>hack<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> @import (reference) &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;src/design/config.less&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n</code></pre></div><p>src/design/config.less</p><div class="language-js"><pre><code>@<span class="token keyword">import</span> <span class="token punctuation">(</span>reference<span class="token punctuation">)</span> <span class="token string">&#39;color.less&#39;</span><span class="token punctuation">;</span>\n</code></pre></div><p>src/design/color.less</p><div class="language-js"><pre><code><span class="token comment">// Dark-dark</span>\n@border<span class="token operator">-</span>color<span class="token operator">-</span>dark<span class="token operator">:</span> #b6b7b9<span class="token punctuation">;</span>\n</code></pre></div><h2 id="load"><a class="header-anchor" href="#load" aria-hidden="true">#</a> load</h2><p>main.ts</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token string">&#39;/@/design/index.less&#39;</span><span class="token punctuation">;</span>\n</code></pre></div><p>design/index.less</p><div class="language-js"><pre><code>@<span class="token keyword">import</span> <span class="token string">&#39;public.less&#39;</span><span class="token punctuation">;</span>\n</code></pre></div><p>src\\design\\public.less</p><div class="language-js"><pre><code><span class="token operator">:</span><span class="token operator">:</span><span class="token operator">-</span>webkit<span class="token operator">-</span>scrollbar<span class="token operator">-</span>thumb<span class="token operator">:</span>hover <span class="token punctuation">{</span>\n  background<span class="token operator">-</span>color<span class="token operator">:</span> @border<span class="token operator">-</span>color<span class="token operator">-</span>dark<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> usage</h2><p>build\\vite\\plugin\\index.ts</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> configThemePlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./theme&#39;</span><span class="token punctuation">;</span>\n</code></pre></div><p>build\\vite\\plugin\\theme.ts</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> generateModifyVars <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../../generate/generateModifyVars&#39;</span><span class="token punctuation">;</span>\n\n <span class="token function">antdDarkThemePlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      preloadFiles<span class="token operator">:</span> <span class="token punctuation">[</span>\n        path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;node_modules/ant-design-vue/dist/antd.less&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;src/design/index.less&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token operator">...</span>\n      <span class="token comment">// extractCss: false,</span>\n      darkModifyVars<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token operator">...</span><span class="token function">generateModifyVars</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token string">&#39;text-color&#39;</span><span class="token operator">:</span> <span class="token string">&#39;#c9d1d9&#39;</span><span class="token punctuation">,</span>\n</code></pre></div><h2 id="debug"><a class="header-anchor" href="#debug" aria-hidden="true">#</a> debug</h2><blockquote><p>UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch().</p></blockquote><p>src\\design\\public.less</p><div class="language-js"><pre><code><span class="token operator">:</span><span class="token operator">:</span><span class="token operator">-</span>webkit<span class="token operator">-</span>scrollbar<span class="token operator">-</span>thumb<span class="token operator">:</span>hover <span class="token punctuation">{</span>\n  background<span class="token operator">-</span>color<span class="token operator">:</span> @border<span class="token operator">-</span>color<span class="token operator">-</span>dark<span class="token punctuation">;</span> <span class="token comment">// `@border-color-dark` 無法辨識</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',27);p.render=function(a,t,p,o,c,l){return n(),s("div",null,[e])};export default p;export{t as __pageData};
